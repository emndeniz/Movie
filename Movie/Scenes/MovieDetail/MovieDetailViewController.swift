//
//  MovieDetailViewController.swift
//  Movie
//
//  Created by Mehmet Emin Deniz on 11.03.2021.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class MovieDetailViewController: UIViewController {
    
    // MARK: - Public properties -
    
    @IBOutlet weak var moviePoster: UIImageView!
    @IBOutlet weak var favoriteIcon: UIImageView!
    @IBOutlet weak var movieTitle: UILabel!
    @IBOutlet weak var movieDescription: UILabel!
    @IBOutlet weak var voteRateLabel: UILabel!
    @IBOutlet weak var voteCountLabel: UILabel!

    var presenter: MovieDetailPresenterInterface!
   
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.title = presenter.getTitle()
        presenter.viewDidLoad()
        
        movieTitle.text = presenter.getTitle()
        
        let favoriteIconName = MovieFavoriteManager().isMovieFavorite(id: presenter.getMovieId()) ? "star.fill" : "star"
        favoriteIcon.image = UIImage(systemName: favoriteIconName)
    }
    
    @IBAction func favoriteImageAction(_ sender: Any) {

        toggleFavoriteMovieStatus()
    }
    
    private func toggleFavoriteMovieStatus(){
        if MovieFavoriteManager().isMovieFavorite(id: presenter.getMovieId()){
            MovieFavoriteManager().removeFromFavorites(id: presenter.getMovieId())
            favoriteIcon.image = UIImage(systemName: "star")
        }else {
            MovieFavoriteManager().addMovieToFavorites(id: presenter.getMovieId())
            favoriteIcon.image = UIImage(systemName: "star.fill")
        }
    }
    
}

// MARK: - Extensions -

extension MovieDetailViewController: MovieDetailViewInterface {
    func updateUI(model: MovieDetailViewModel) {
        movieDescription.text = model.description
        voteRateLabel.text = String(model.voteAvarage)
        voteCountLabel.text = String(model.voteCount)
        //toggleFavoriteImage(isFavorited: model.isFavourite)
        
        if let url = ImageViewHelper.createImageURL(posterPath: model.posterUrl, size: 500) {
            moviePoster.load(url: url)
        }
        
    
    }
    
}
