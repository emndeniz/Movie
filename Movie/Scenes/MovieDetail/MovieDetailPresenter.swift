//
//  MovieDetailPresenter.swift
//  Movie
//
//  Created by Mehmet Emin Deniz on 11.03.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class MovieDetailPresenter {

    // MARK: - Private properties -

    private unowned let view: MovieDetailViewInterface
    private let formatter: MovieDetailFormatterInterface
    private let interactor: MovieDetailInteractorInterface
    private let wireframe: MovieDetailWireframeInterface
    private let title:String
    private let movieId:Int

    // MARK: - Lifecycle -

    init(view: MovieDetailViewInterface, formatter: MovieDetailFormatterInterface, interactor: MovieDetailInteractorInterface, wireframe: MovieDetailWireframeInterface, movieId:Int, title:String) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
        self.movieId = movieId
        self.title = title
    }
}

// MARK: - Extensions -

extension MovieDetailPresenter: MovieDetailPresenterInterface {
    func getMovieId() -> Int {
        return movieId
    }
    

    func getTitle() -> String {
        return title
    }

    func viewDidLoad() {
        interactor.getMovieDetail(id: movieId) { [weak self] response in
            
            guard let self = self else {return}
            
            guard let response = response else {
                let okAction = UIAlertAction(title: "OK", style: .default, handler: nil)
                self.wireframe.showAlert(title: "Error", message: "Failed to retrieve data", actions: [okAction])
                return
            }
            
            let formatedModel = self.formatter.getMovieDetailViewModel(response: response)
            self.view.updateUI(model:formatedModel)
        }
    }
}
